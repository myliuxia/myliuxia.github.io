(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{447:function(t,v,_){"use strict";_.r(v);var a=_(6),i=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("p",[t._v("浏览器和服务器之间通信是通过HTTP协议，在频繁通信的过程中为了提升性能，hTTP提供了一套缓存机制\n")])]),t._v(" "),_("h2",{attrs:{id:"浏览器请求资源过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器请求资源过程"}},[t._v("#")]),t._v(" 浏览器请求资源过程")]),t._v(" "),_("p",[t._v("流程如下图:")]),t._v(" "),_("p",[_("img",{attrs:{src:"/image/http_cache.png",alt:"浏览器请求资源过程"}})]),t._v(" "),_("p",[t._v("可以看出整个过程缓存机制分为两个阶段，先是强缓存阶段再是协商缓存阶段")]),t._v(" "),_("h2",{attrs:{id:"强缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),_("p",[t._v("强制缓存分为两种情况")]),t._v(" "),_("ul",[_("li",[t._v("Expires（http1.0）")]),t._v(" "),_("li",[t._v("Cache-Control（http1.1）")])]),t._v(" "),_("h3",{attrs:{id:"expires"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),_("p",[t._v("Exprires的值为"),_("strong",[t._v("服务端")]),t._v("返回的数据到期时间。当再次请求时的"),_("strong",[t._v("浏览器端当前时间")]),t._v("小于返回的此时间，则直接使用缓存数据。但由于"),_("strong",[t._v("服务端时间")]),t._v("和"),_("strong",[t._v("客户端时间")]),t._v("可能有误差，这也将导致缓存命中的误差，另一方面，Expires是HTTP1.0的产物，故现在大多数使用Cache-Control替代。")]),t._v(" "),_("h3",{attrs:{id:"cache-control"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),_("p",[t._v("Cache-Control有很多属性，不同的属性代表的意义也不同。")]),t._v(" "),_("ul",[_("li",[t._v("private：客户端可以缓存")]),t._v(" "),_("li",[t._v("public：客户端和代理服务器都可以缓存")]),t._v(" "),_("li",[t._v("max-age=t：缓存内容将在t秒后失效")]),t._v(" "),_("li",[t._v("no-cache：需要使用协商缓存来验证缓存数据")]),t._v(" "),_("li",[t._v("no-store：所有内容都不会缓存")])]),t._v(" "),_("h2",{attrs:{id:"协商缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),_("p",[t._v("协商缓存也分两种")]),t._v(" "),_("ul",[_("li",[t._v("Last-Modified（响应头） 和 If-Modified-Since（请求头）")]),t._v(" "),_("li",[t._v("ETag（响应头）和 If-None-Match（请求头）")])]),t._v(" "),_("h3",{attrs:{id:"last-modified-和-if-modified-since"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-和-if-modified-since"}},[t._v("#")]),t._v(" Last-Modified 和 If-Modified-Since")]),t._v(" "),_("p",[t._v("浏览器和服务器协商，服务器每次返回文件的同时，告诉浏览器文件在服务器上"),_("strong",[t._v("最近的修改时间")]),t._v("。")]),t._v(" "),_("p",[t._v("请求过程如下：")]),t._v(" "),_("ul",[_("li",[t._v("浏览器初次请求静态资源")]),t._v(" "),_("li",[t._v("服务器读取资源，返回给浏览器，同时在 "),_("strong",[t._v("响应头")]),t._v(" 带上文件上次修改时间 "),_("strong",[t._v("Last-Modified")]),t._v("（GMT标准格式）")]),t._v(" "),_("li",[t._v("当浏览器上缓存过期时，浏览器带上"),_("strong",[t._v("请求头")]),t._v(" "),_("strong",[t._v("If-Modified-Since")]),t._v("（也就是上次请求响应头上的Last-Modified）请求服务器资源")]),t._v(" "),_("li",[t._v("服务器对比 "),_("strong",[t._v("If-Modified-Since")]),t._v(" 和文件的上次修改时间。如果时间相同则继续使用本地缓存响应"),_("strong",[t._v("304")]),t._v("，如果比相同就响应"),_("strong",[t._v("文件内容")]),t._v("和"),_("strong",[t._v("Last-Modified")]),t._v("并且响应状态为"),_("strong",[t._v("200")])])]),t._v(" "),_("p",[t._v("这个方案通过服务器检查文件是否有修改（通过对比修改时间），如果没有修改过就不再发送文件。但还是存在以下几个缺点：")]),t._v(" "),_("ul",[_("li",[t._v("由于Last-Modified修改时间时GMT时间，只能精确到"),_("strong",[t._v("秒")]),t._v("，如果文件在一秒内多次修改，服务器便不知道文件修改过，浏览器就有可能拿不到最新的文件")]),t._v(" "),_("li",[t._v("如果服务器上文件被多次修改了，但是内容却没有发生变化，服务器还是需要重新返回文件")])]),t._v(" "),_("h3",{attrs:{id:"etag-和-if-none-match"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#etag-和-if-none-match"}},[t._v("#")]),t._v(" ETag 和 If-None-Match")]),t._v(" "),_("p",[t._v("为了解决文件修改时间不精准的问题，服务器和浏览器再次协商，这次不返回时间，返回文件的唯一标识ETag。只有当文件内容改变时，Etag才会改变。\n整个请求过程如下：")]),t._v(" "),_("ul",[_("li",[t._v("浏览器初次请求静态资源")]),t._v(" "),_("li",[t._v("服务器读取资源，返回给浏览器，同时带上文件的唯一标识 "),_("strong",[t._v("ETag")])]),t._v(" "),_("li",[t._v("浏览器再次请求该资源，并且缓存文件过期时，浏览器带上请求头 "),_("strong",[t._v("If-None-Match")]),t._v("（值为上次请求的ETag）请求服务器")]),t._v(" "),_("li",[t._v("服务器比较请求头里的"),_("strong",[t._v("If-None-Match")]),t._v(" 和 资源文件的ETag。如果一致就继续使用本地缓存（响应状态304），如果不一致就再次返回文件和ETag（响应状态200）")])]),t._v(" "),_("h2",{attrs:{id:"缓存优先级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缓存优先级"}},[t._v("#")]),t._v(" 缓存优先级")]),t._v(" "),_("p",[t._v("Cache-Control > Expires > ETag > Last-Modified")])])}),[],!1,null,null,null);v.default=i.exports}}]);